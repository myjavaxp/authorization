<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.yibo.web.dao.PermissionMapper">
    <resultMap id="BaseResultMap" type="com.yibo.web.domain.Permission">
        <id column="id" jdbcType="BIGINT" property="id"/>
        <result column="name" jdbcType="VARCHAR" property="name"/>
        <result column="url" jdbcType="VARCHAR" property="url"/>
        <result column="parent_id" jdbcType="BIGINT" property="parentId"/>
        <result column="type" jdbcType="BIT" property="type"/>
        <result column="enabled" jdbcType="BIT" property="enabled"/>
    </resultMap>
    <sql id="Base_Column_List">
        id,
        name,
        url,
        parent_id,
        type,
        enabled
    </sql>
    <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from permission
        where id = #{id,jdbcType=BIGINT}
    </select>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
        delete
        from permission
        where id = #{id,jdbcType=BIGINT}
    </delete>
    <insert id="insert" parameterType="com.yibo.web.domain.Permission">
        insert into permission (id, name, url,
                                parent_id, type, enabled)
        values (#{id,jdbcType=BIGINT}, #{name,jdbcType=VARCHAR}, #{url,jdbcType=VARCHAR},
                #{parentId,jdbcType=BIGINT}, #{type,jdbcType=BIT}, #{enabled,jdbcType=BIT})
    </insert>
    <insert id="insertSelective" parameterType="com.yibo.web.domain.Permission">
        insert into permission
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="id != null">
                id,
            </if>
            <if test="name != null">
                name,
            </if>
            <if test="url != null">
                url,
            </if>
            <if test="parentId != null">
                parent_id,
            </if>
            <if test="type != null">
                type,
            </if>
            <if test="enabled != null">
                enabled,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="id != null">
                #{id,jdbcType=BIGINT},
            </if>
            <if test="name != null">
                #{name,jdbcType=VARCHAR},
            </if>
            <if test="url != null">
                #{url,jdbcType=VARCHAR},
            </if>
            <if test="parentId != null">
                #{parentId,jdbcType=BIGINT},
            </if>
            <if test="type != null">
                #{type,jdbcType=BIT},
            </if>
            <if test="enabled != null">
                #{enabled,jdbcType=BIT},
            </if>
        </trim>
    </insert>
    <update id="updateByPrimaryKeySelective" parameterType="com.yibo.web.domain.Permission">
        update permission
        <set>
            <if test="name != null">
                name = #{name,jdbcType=VARCHAR},
            </if>
            <if test="url != null">
                url = #{url,jdbcType=VARCHAR},
            </if>
            <if test="parentId != null">
                parent_id = #{parentId,jdbcType=BIGINT},
            </if>
            <if test="type != null">
                type = #{type,jdbcType=BIT},
            </if>
            <if test="enabled != null">
                enabled = #{enabled,jdbcType=BIT},
            </if>
        </set>
        where id = #{id,jdbcType=BIGINT}
    </update>
    <update id="updateByPrimaryKey" parameterType="com.yibo.web.domain.Permission">
        update permission
        set name      = #{name,jdbcType=VARCHAR},
            url       = #{url,jdbcType=VARCHAR},
            parent_id = #{parentId,jdbcType=BIGINT},
            type      = #{type,jdbcType=BIT},
            enabled   = #{enabled,jdbcType=BIT}
        where id = #{id,jdbcType=BIGINT}
    </update>
    <select id="getApiPermissionsByRoleIds" resultType="string">
        select p.url
        from role_permission rp
        left join permission p on p.id = rp.id where p.enabled=1 and p.type=1 and
        rp.role_id in
        <foreach collection="list" item="id" separator="," close=")" open="(">
            #{id}
        </foreach>
    </select>
    <select id="getAllApiPermissions" resultType="string">
        select url
        from permission
        where enabled = 1
          and type = 1
    </select>
</mapper>